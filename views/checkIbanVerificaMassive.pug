extends layout

block content
  .container
    h1.mt-4.mb-3 Welcome to #{title}
    p.lead Verifica:

    //- FORM
    form(method='POST', action='/checkIban/massiveVerifica', class='form-horizontal')
      .form-group
        label(for='bulkRequestId', class='control-label col-sm-2') bulkRequestId:
        .col-sm-10
          input.form-control(type='text', name='bulkRequestId', id='bulkRequestId', placeholder='Inserisci bulkRequestId')
      .form-group
        .col-sm-offset-2.col-sm-10
          button.btn.btn-primary(type='submit') Verifica bulkRequestId

    //- RISULTATI    
    if result
      h2.mt-5 Risultato API PagoPA

      //- Bottoni per scaricare JSON, CSV e XLSX
      button#downloadBtn.btn.btn-success.mb-3(type='button') Scarica JSON
      button#downloadCsvBtn.btn.btn-info.mb-3(type='button') Esporta CSV
      button#downloadXlsxBtn.btn.btn-warning.mb-3(type='button') Esporta XLSX

      //- Safe extraction dal payload
      - var payload = result || {}
      - var bulkRequestId = payload.bulkRequestId || 'N/A'
      - var bulkStatus = payload.bulkRequestStatus || 'N/A'
      - var total = payload.totalItemsCount || 0
      - var processed = payload.processedItemsCount || 0
      - var list = payload.list || []

      //- Dati principali
      p
        strong bulkRequestId:
        | #{' ' + bulkRequestId}
      p
        strong Stato Richiesta:
        | #{' ' + bulkStatus}
      p
        strong Elementi Totali:
        | #{' ' + total}
      p
        strong Elementi Elaborati:
        | #{' ' + processed}

      //- Tabella
      if list.length
        table.table.table-bordered.table-striped.table-sm
          thead
            tr
              th #
              th RequestCode
              th IBAN
              th Ragione Sociale
              th Riferimento Legale
              th Cod. Fisc. Rapp.
              th Intestatario (P.IVA)
              th Stato
              th Banca
              th BIC
              th Filiale
          tbody
            each item, i in list
              - var accountValue = item.account && item.account.value || 'N/A'
              - var ragioneSociale = item.anagraficaInfo && item.anagraficaInfo.ragioneSociale || 'N/A'
              - var riferimentoLegale = item.anagraficaInfo && item.anagraficaInfo.riferimentoLegale || 'N/A'
              - var codiceFiscaleRapp = item.anagraficaInfo && item.anagraficaInfo.codiceFiscaleRapp || 'N/A'
              - var vatCode = item.accountHolder && item.accountHolder.vatCode || 'N/A'
              - var status = item.validationStatus || 'N/A'
              - var bank = item.bankInfo && item.bankInfo.businessName || 'N/A'
              - var bic = item.bankInfo && item.bankInfo.bicCode || 'N/A'
              - var branch = item.bankInfo && item.bankInfo.branchName || 'N/A'

              tr(class=status === 'KO' ? 'table-danger' : 'table-success')
                td #{i + 1}
                td #{item.requestCode}
                td #{accountValue}
                td #{ragioneSociale}
                td #{riferimentoLegale}
                td #{codiceFiscaleRapp}
                td #{vatCode}
                td #{status}
                td #{bank}
                td #{bic}
                td #{branch}
      else
        p Nessun dato presente nella lista.

      //- JSON preview
      pre#jsonResult.bg-light.p-3.border.rounded= JSON.stringify(result, null, 2)

  //- Include SheetJS CDN (per XLSX)
  script(src="https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js")

  //- Script per scaricare JSON, CSV e XLSX
  script.
    // Download JSON
    document.getElementById('downloadBtn')?.addEventListener('click', function() {
      var data = !{JSON.stringify(result)};
      var jsonStr = JSON.stringify(data, null, 2);
      var blob = new Blob([jsonStr], { type: 'application/json' });
      var url = URL.createObjectURL(blob);
      var a = document.createElement('a');
      a.href = url;
      a.download = 'result.json';
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    });

    // Download CSV
    document.getElementById('downloadCsvBtn')?.addEventListener('click', function() {
      var list = !{JSON.stringify(list)};
      if (!list.length) {
        alert('Nessun dato da esportare!');
        return;
      }

      var headers = [
        'RequestCode', 'IBAN', 'Ragione Sociale', 'Riferimento Legale', 'Cod. Fisc. Rapp.', 
        'Intestatario (P.IVA)', 'Stato', 'Banca', 'BIC', 'Filiale'
      ];

      function escapeCSV(value) {
        if (typeof value === 'string' && (value.includes(',') || value.includes('"') || value.includes('\n'))) {
          return '"' + value.replace(/"/g, '""') + '"';
        }
        return value;
      }

      var rows = list.map(function(item) {
        var accountValue = item.account && item.account.value || '';
        var ragioneSociale = item.anagraficaInfo && item.anagraficaInfo.ragioneSociale || '';
        var riferimentoLegale = item.anagraficaInfo && item.anagraficaInfo.riferimentoLegale || '';
        var codiceFiscaleRapp = item.anagraficaInfo && item.anagraficaInfo.codiceFiscaleRapp || '';
        var vatCode = item.accountHolder && item.accountHolder.vatCode || '';
        var status = item.validationStatus || '';
        var bank = item.bankInfo && item.bankInfo.businessName || '';
        var bic = item.bankInfo && item.bankInfo.bicCode || '';
        var branch = item.bankInfo && item.bankInfo.branchName || '';

        return [
          escapeCSV(item.requestCode),
          escapeCSV(accountValue),
          escapeCSV(ragioneSociale),
          escapeCSV(riferimentoLegale),
          escapeCSV(codiceFiscaleRapp),
          escapeCSV(vatCode),
          escapeCSV(status),
          escapeCSV(bank),
          escapeCSV(bic),
          escapeCSV(branch)
        ].join(',');
      });

      var csvContent = [headers.join(','), ...rows].join('\r\n');

      var blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
      var url = URL.createObjectURL(blob);
      var a = document.createElement('a');
      a.href = url;
      a.download = 'result.csv';
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    });

    // Download XLSX
    document.getElementById('downloadXlsxBtn')?.addEventListener('click', function() {
      var list = !{JSON.stringify(list)};
      if (!list.length) {
        alert('Nessun dato da esportare!');
        return;
      }

      var ws_data = [
        ['RequestCode', 'IBAN', 'Ragione Sociale', 'Riferimento Legale', 'Cod. Fisc. Rapp.', 
         'Intestatario (P.IVA)', 'Stato', 'Banca', 'BIC', 'Filiale']
      ];

      list.forEach(function(item) {
        ws_data.push([
          item.requestCode || '',
          (item.account && item.account.value) || '',
          (item.anagraficaInfo && item.anagraficaInfo.ragioneSociale) || '',
          (item.anagraficaInfo && item.anagraficaInfo.riferimentoLegale) || '',
          (item.anagraficaInfo && item.anagraficaInfo.codiceFiscaleRapp) || '',
          (item.accountHolder && item.accountHolder.vatCode) || '',
          item.validationStatus || '',
          (item.bankInfo && item.bankInfo.businessName) || '',
          (item.bankInfo && item.bankInfo.bicCode) || '',
          (item.bankInfo && item.bankInfo.branchName) || ''
        ]);
      });

      var wb = XLSX.utils.book_new();
      var ws = XLSX.utils.aoa_to_sheet(ws_data);
      XLSX.utils.book_append_sheet(wb, ws, 'Risultati');
      XLSX.writeFile(wb, 'result.xlsx');
    });
